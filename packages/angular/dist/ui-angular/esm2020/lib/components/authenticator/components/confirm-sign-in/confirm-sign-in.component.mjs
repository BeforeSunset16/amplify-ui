import { Component, HostBinding } from '@angular/core';
import { getActorContext, getFormDataFromEvent, authenticatorTextUtil, } from '@aws-amplify/ui';
import * as i0 from "@angular/core";
import * as i1 from "../../../../services/authenticator.service";
import * as i2 from "@angular/common";
import * as i3 from "../../../../utilities/amplify-slot/amplify-slot.component";
import * as i4 from "../base-form-fields/base-form-fields.component";
import * as i5 from "../../../../primitives/button/button.component";
import * as i6 from "../../../../primitives/error/error.component";
const { getConfirmText, getBackToSignInText, getChallengeText } = authenticatorTextUtil;
export class ConfirmSignInComponent {
    constructor(authenticator) {
        this.authenticator = authenticator;
        this.dataAttr = '';
        this.confirmText = getConfirmText();
        this.backToSignInText = getBackToSignInText();
    }
    get context() {
        return this.authenticator.slotContext;
    }
    ngOnInit() {
        this.setHeaderText();
    }
    setHeaderText() {
        const state = this.authenticator.authState;
        const actorContext = getActorContext(state);
        const { challengeName } = actorContext;
        this.headerText = getChallengeText(challengeName);
    }
    onInput(event) {
        event.preventDefault();
        const { name, value } = event.target;
        this.authenticator.updateForm({ name, value });
    }
    onSubmit(event) {
        event.preventDefault();
        this.authenticator.submitForm(getFormDataFromEvent(event));
    }
}
ConfirmSignInComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: ConfirmSignInComponent, deps: [{ token: i1.AuthenticatorService }], target: i0.ɵɵFactoryTarget.Component });
ConfirmSignInComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.3.0", type: ConfirmSignInComponent, selector: "amplify-confirm-sign-in", host: { properties: { "attr.data-amplify-authenticator-confirmsignin": "this.dataAttr" } }, ngImport: i0, template: "<form data-amplify-form (submit)=\"onSubmit($event)\" (input)=\"onInput($event)\">\n  <fieldset\n    class=\"amplify-flex amplify-authenticator__column\"\n    data-amplify-fieldset\n    [disabled]=\"authenticator.isPending\"\n  >\n    <amplify-slot name=\"confirm-sign-in-header\" [context]=\"context\">\n      <h3 class=\"amplify-heading amplify-heading--3\">{{ headerText }}</h3>\n    </amplify-slot>\n    <amplify-base-form-fields route=\"confirmSignIn\"></amplify-base-form-fields>\n\n    <button\n      amplify-button\n      variation=\"primary\"\n      fullWidth=\"true\"\n      type=\"submit\"\n      [isDisabled]=\"authenticator.isPending\"\n    >\n      {{ confirmText }}\n    </button>\n    <button\n      amplify-button\n      size=\"small\"\n      variation=\"link\"\n      fontWeight=\"normal\"\n      fullWidth=\"true\"\n      (click)=\"authenticator.toSignIn()\"\n    >\n      {{ backToSignInText }}\n    </button>\n    <amplify-error *ngIf=\"authenticator.error\">\n      {{ authenticator.error }}\n    </amplify-error>\n  </fieldset>\n  <amplify-slot\n    name=\"confirm-sign-in-footer\"\n    [context]=\"context\"\n  ></amplify-slot>\n</form>\n", dependencies: [{ kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i3.AmplifySlotComponent, selector: "amplify-slot", inputs: ["name", "context"] }, { kind: "component", type: i4.BaseFormFieldsComponent, selector: "amplify-base-form-fields", inputs: ["route"] }, { kind: "component", type: i5.ButtonComponent, selector: "button[amplify-button]", inputs: ["type", "fullWidth", "isDisabled", "size", "variation", "fontWeight"] }, { kind: "component", type: i6.ErrorComponent, selector: "amplify-error" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: ConfirmSignInComponent, decorators: [{
            type: Component,
            args: [{ selector: 'amplify-confirm-sign-in', template: "<form data-amplify-form (submit)=\"onSubmit($event)\" (input)=\"onInput($event)\">\n  <fieldset\n    class=\"amplify-flex amplify-authenticator__column\"\n    data-amplify-fieldset\n    [disabled]=\"authenticator.isPending\"\n  >\n    <amplify-slot name=\"confirm-sign-in-header\" [context]=\"context\">\n      <h3 class=\"amplify-heading amplify-heading--3\">{{ headerText }}</h3>\n    </amplify-slot>\n    <amplify-base-form-fields route=\"confirmSignIn\"></amplify-base-form-fields>\n\n    <button\n      amplify-button\n      variation=\"primary\"\n      fullWidth=\"true\"\n      type=\"submit\"\n      [isDisabled]=\"authenticator.isPending\"\n    >\n      {{ confirmText }}\n    </button>\n    <button\n      amplify-button\n      size=\"small\"\n      variation=\"link\"\n      fontWeight=\"normal\"\n      fullWidth=\"true\"\n      (click)=\"authenticator.toSignIn()\"\n    >\n      {{ backToSignInText }}\n    </button>\n    <amplify-error *ngIf=\"authenticator.error\">\n      {{ authenticator.error }}\n    </amplify-error>\n  </fieldset>\n  <amplify-slot\n    name=\"confirm-sign-in-footer\"\n    [context]=\"context\"\n  ></amplify-slot>\n</form>\n" }]
        }], ctorParameters: function () { return [{ type: i1.AuthenticatorService }]; }, propDecorators: { dataAttr: [{
                type: HostBinding,
                args: ['attr.data-amplify-authenticator-confirmsignin']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlybS1zaWduLWluLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpLWFuZ3VsYXIvc3JjL2xpYi9jb21wb25lbnRzL2F1dGhlbnRpY2F0b3IvY29tcG9uZW50cy9jb25maXJtLXNpZ24taW4vY29uZmlybS1zaWduLWluLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpLWFuZ3VsYXIvc3JjL2xpYi9jb21wb25lbnRzL2F1dGhlbnRpY2F0b3IvY29tcG9uZW50cy9jb25maXJtLXNpZ24taW4vY29uZmlybS1zaWduLWluLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQy9ELE9BQU8sRUFFTCxlQUFlLEVBQ2Ysb0JBQW9CLEVBRXBCLHFCQUFxQixHQUN0QixNQUFNLGlCQUFpQixDQUFDOzs7Ozs7OztBQUd6QixNQUFNLEVBQUUsY0FBYyxFQUFFLG1CQUFtQixFQUFFLGdCQUFnQixFQUFFLEdBQzdELHFCQUFxQixDQUFDO0FBTXhCLE1BQU0sT0FBTyxzQkFBc0I7SUFTakMsWUFBbUIsYUFBbUM7UUFBbkMsa0JBQWEsR0FBYixhQUFhLENBQXNCO1FBUlEsYUFBUSxHQUFHLEVBQUUsQ0FBQztRQUlyRSxnQkFBVyxHQUFHLGNBQWMsRUFBRSxDQUFDO1FBQy9CLHFCQUFnQixHQUFHLG1CQUFtQixFQUFFLENBQUM7SUFHUyxDQUFDO0lBRTFELElBQVcsT0FBTztRQUNoQixPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsV0FBVyxDQUFDO0lBQ3hDLENBQUM7SUFFRCxRQUFRO1FBQ04sSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO0lBQ3ZCLENBQUM7SUFFRCxhQUFhO1FBQ1gsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUM7UUFDM0MsTUFBTSxZQUFZLEdBQUcsZUFBZSxDQUFDLEtBQUssQ0FBa0IsQ0FBQztRQUM3RCxNQUFNLEVBQUUsYUFBYSxFQUFFLEdBQUcsWUFBWSxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxVQUFVLEdBQUcsZ0JBQWdCLENBQUMsYUFBYSxDQUFDLENBQUM7SUFDcEQsQ0FBQztJQUVELE9BQU8sQ0FBQyxLQUFZO1FBQ2xCLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN2QixNQUFNLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxHQUFxQixLQUFLLENBQUMsTUFBTSxDQUFDO1FBQ3ZELElBQUksQ0FBQyxhQUFhLENBQUMsVUFBVSxDQUFDLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUM7SUFDakQsQ0FBQztJQUVELFFBQVEsQ0FBQyxLQUFZO1FBQ25CLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN2QixJQUFJLENBQUMsYUFBYSxDQUFDLFVBQVUsQ0FBQyxvQkFBb0IsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQzdELENBQUM7O21IQW5DVSxzQkFBc0I7dUdBQXRCLHNCQUFzQiwySkNqQm5DLDRvQ0F1Q0E7MkZEdEJhLHNCQUFzQjtrQkFKbEMsU0FBUzsrQkFDRSx5QkFBeUI7MkdBSTJCLFFBQVE7c0JBQXJFLFdBQVc7dUJBQUMsK0NBQStDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBIb3N0QmluZGluZywgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICBGb3JtRmllbGRzQXJyYXksXG4gIGdldEFjdG9yQ29udGV4dCxcbiAgZ2V0Rm9ybURhdGFGcm9tRXZlbnQsXG4gIFNpZ25JbkNvbnRleHQsXG4gIGF1dGhlbnRpY2F0b3JUZXh0VXRpbCxcbn0gZnJvbSAnQGF3cy1hbXBsaWZ5L3VpJztcbmltcG9ydCB7IEF1dGhlbnRpY2F0b3JTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vLi4vLi4vc2VydmljZXMvYXV0aGVudGljYXRvci5zZXJ2aWNlJztcblxuY29uc3QgeyBnZXRDb25maXJtVGV4dCwgZ2V0QmFja1RvU2lnbkluVGV4dCwgZ2V0Q2hhbGxlbmdlVGV4dCB9ID1cbiAgYXV0aGVudGljYXRvclRleHRVdGlsO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhbXBsaWZ5LWNvbmZpcm0tc2lnbi1pbicsXG4gIHRlbXBsYXRlVXJsOiAnLi9jb25maXJtLXNpZ24taW4uY29tcG9uZW50Lmh0bWwnLFxufSlcbmV4cG9ydCBjbGFzcyBDb25maXJtU2lnbkluQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQEhvc3RCaW5kaW5nKCdhdHRyLmRhdGEtYW1wbGlmeS1hdXRoZW50aWNhdG9yLWNvbmZpcm1zaWduaW4nKSBkYXRhQXR0ciA9ICcnO1xuXG4gIC8vIHRyYW5zbGF0ZWQgdGV4dHNcbiAgcHVibGljIGhlYWRlclRleHQ6IHN0cmluZztcbiAgcHVibGljIGNvbmZpcm1UZXh0ID0gZ2V0Q29uZmlybVRleHQoKTtcbiAgcHVibGljIGJhY2tUb1NpZ25JblRleHQgPSBnZXRCYWNrVG9TaWduSW5UZXh0KCk7XG4gIHB1YmxpYyBzb3J0ZWRGb3JtRmllbGRzOiBGb3JtRmllbGRzQXJyYXk7XG5cbiAgY29uc3RydWN0b3IocHVibGljIGF1dGhlbnRpY2F0b3I6IEF1dGhlbnRpY2F0b3JTZXJ2aWNlKSB7fVxuXG4gIHB1YmxpYyBnZXQgY29udGV4dCgpOiBBdXRoZW50aWNhdG9yU2VydmljZVsnc2xvdENvbnRleHQnXSB7XG4gICAgcmV0dXJuIHRoaXMuYXV0aGVudGljYXRvci5zbG90Q29udGV4dDtcbiAgfVxuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIHRoaXMuc2V0SGVhZGVyVGV4dCgpO1xuICB9XG5cbiAgc2V0SGVhZGVyVGV4dCgpOiB2b2lkIHtcbiAgICBjb25zdCBzdGF0ZSA9IHRoaXMuYXV0aGVudGljYXRvci5hdXRoU3RhdGU7XG4gICAgY29uc3QgYWN0b3JDb250ZXh0ID0gZ2V0QWN0b3JDb250ZXh0KHN0YXRlKSBhcyBTaWduSW5Db250ZXh0O1xuICAgIGNvbnN0IHsgY2hhbGxlbmdlTmFtZSB9ID0gYWN0b3JDb250ZXh0O1xuICAgIHRoaXMuaGVhZGVyVGV4dCA9IGdldENoYWxsZW5nZVRleHQoY2hhbGxlbmdlTmFtZSk7XG4gIH1cblxuICBvbklucHV0KGV2ZW50OiBFdmVudCk6IHZvaWQge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgY29uc3QgeyBuYW1lLCB2YWx1ZSB9ID0gPEhUTUxJbnB1dEVsZW1lbnQ+ZXZlbnQudGFyZ2V0O1xuICAgIHRoaXMuYXV0aGVudGljYXRvci51cGRhdGVGb3JtKHsgbmFtZSwgdmFsdWUgfSk7XG4gIH1cblxuICBvblN1Ym1pdChldmVudDogRXZlbnQpOiB2b2lkIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHRoaXMuYXV0aGVudGljYXRvci5zdWJtaXRGb3JtKGdldEZvcm1EYXRhRnJvbUV2ZW50KGV2ZW50KSk7XG4gIH1cbn1cbiIsIjxmb3JtIGRhdGEtYW1wbGlmeS1mb3JtIChzdWJtaXQpPVwib25TdWJtaXQoJGV2ZW50KVwiIChpbnB1dCk9XCJvbklucHV0KCRldmVudClcIj5cbiAgPGZpZWxkc2V0XG4gICAgY2xhc3M9XCJhbXBsaWZ5LWZsZXggYW1wbGlmeS1hdXRoZW50aWNhdG9yX19jb2x1bW5cIlxuICAgIGRhdGEtYW1wbGlmeS1maWVsZHNldFxuICAgIFtkaXNhYmxlZF09XCJhdXRoZW50aWNhdG9yLmlzUGVuZGluZ1wiXG4gID5cbiAgICA8YW1wbGlmeS1zbG90IG5hbWU9XCJjb25maXJtLXNpZ24taW4taGVhZGVyXCIgW2NvbnRleHRdPVwiY29udGV4dFwiPlxuICAgICAgPGgzIGNsYXNzPVwiYW1wbGlmeS1oZWFkaW5nIGFtcGxpZnktaGVhZGluZy0tM1wiPnt7IGhlYWRlclRleHQgfX08L2gzPlxuICAgIDwvYW1wbGlmeS1zbG90PlxuICAgIDxhbXBsaWZ5LWJhc2UtZm9ybS1maWVsZHMgcm91dGU9XCJjb25maXJtU2lnbkluXCI+PC9hbXBsaWZ5LWJhc2UtZm9ybS1maWVsZHM+XG5cbiAgICA8YnV0dG9uXG4gICAgICBhbXBsaWZ5LWJ1dHRvblxuICAgICAgdmFyaWF0aW9uPVwicHJpbWFyeVwiXG4gICAgICBmdWxsV2lkdGg9XCJ0cnVlXCJcbiAgICAgIHR5cGU9XCJzdWJtaXRcIlxuICAgICAgW2lzRGlzYWJsZWRdPVwiYXV0aGVudGljYXRvci5pc1BlbmRpbmdcIlxuICAgID5cbiAgICAgIHt7IGNvbmZpcm1UZXh0IH19XG4gICAgPC9idXR0b24+XG4gICAgPGJ1dHRvblxuICAgICAgYW1wbGlmeS1idXR0b25cbiAgICAgIHNpemU9XCJzbWFsbFwiXG4gICAgICB2YXJpYXRpb249XCJsaW5rXCJcbiAgICAgIGZvbnRXZWlnaHQ9XCJub3JtYWxcIlxuICAgICAgZnVsbFdpZHRoPVwidHJ1ZVwiXG4gICAgICAoY2xpY2spPVwiYXV0aGVudGljYXRvci50b1NpZ25JbigpXCJcbiAgICA+XG4gICAgICB7eyBiYWNrVG9TaWduSW5UZXh0IH19XG4gICAgPC9idXR0b24+XG4gICAgPGFtcGxpZnktZXJyb3IgKm5nSWY9XCJhdXRoZW50aWNhdG9yLmVycm9yXCI+XG4gICAgICB7eyBhdXRoZW50aWNhdG9yLmVycm9yIH19XG4gICAgPC9hbXBsaWZ5LWVycm9yPlxuICA8L2ZpZWxkc2V0PlxuICA8YW1wbGlmeS1zbG90XG4gICAgbmFtZT1cImNvbmZpcm0tc2lnbi1pbi1mb290ZXJcIlxuICAgIFtjb250ZXh0XT1cImNvbnRleHRcIlxuICA+PC9hbXBsaWZ5LXNsb3Q+XG48L2Zvcm0+XG4iXX0=