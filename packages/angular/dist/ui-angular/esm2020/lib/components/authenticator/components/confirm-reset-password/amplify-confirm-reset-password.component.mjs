import { Component, HostBinding, Input } from '@angular/core';
import { getFormDataFromEvent, authenticatorTextUtil, } from '@aws-amplify/ui';
import * as i0 from "@angular/core";
import * as i1 from "../../../../services/authenticator.service";
import * as i2 from "@angular/common";
import * as i3 from "../../../../utilities/amplify-slot/amplify-slot.component";
import * as i4 from "../base-form-fields/base-form-fields.component";
import * as i5 from "../../../../primitives/button/button.component";
import * as i6 from "../../../../primitives/error/error.component";
const { getBackToSignInText, getResendCodeText, getSubmitText, getResetYourPasswordText, } = authenticatorTextUtil;
export class ConfirmResetPasswordComponent {
    constructor(authenticator) {
        this.authenticator = authenticator;
        this.dataAttr = '';
        this.headerText = getResetYourPasswordText();
        // translated strings
        this.backToSignInText = getBackToSignInText();
        this.resendCodeText = getResendCodeText();
        this.submitText = getSubmitText();
    }
    get context() {
        return this.authenticator.slotContext;
    }
    onInput(event) {
        event.preventDefault();
        const { name, value } = event.target;
        this.authenticator.updateForm({ name, value });
    }
    onSubmit(event) {
        event.preventDefault();
        this.authenticator.submitForm(getFormDataFromEvent(event));
    }
}
ConfirmResetPasswordComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: ConfirmResetPasswordComponent, deps: [{ token: i1.AuthenticatorService }], target: i0.ɵɵFactoryTarget.Component });
ConfirmResetPasswordComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.3.0", type: ConfirmResetPasswordComponent, selector: "amplify-confirm-reset-password", inputs: { headerText: "headerText" }, host: { properties: { "attr.data-amplify-authenticator-confirmsignin": "this.dataAttr" } }, ngImport: i0, template: "<form data-amplify-form (submit)=\"onSubmit($event)\" (input)=\"onInput($event)\">\n  <fieldset\n    class=\"amplify-flex amplify-authenticator__column\"\n    data-amplify-fieldset\n    [disabled]=\"authenticator.isPending\"\n  >\n    <amplify-slot name=\"confirm-reset-password-header\" [context]=\"context\">\n      <h3 class=\"amplify-heading amplify-heading--3\">{{ headerText }}</h3>\n    </amplify-slot>\n\n    <amplify-base-form-fields\n      route=\"confirmResetPassword\"\n    ></amplify-base-form-fields>\n\n    <button\n      amplify-button\n      variation=\"primary\"\n      fullWidth=\"true\"\n      type=\"submit\"\n      [isDisabled]=\"authenticator.isPending\"\n    >\n      {{ submitText }}\n    </button>\n\n    <button\n      amplify-button\n      size=\"small\"\n      variation=\"link\"\n      fontWeight=\"normal\"\n      fullWidth=\"true\"\n      type=\"button\"\n      (click)=\"authenticator.resendCode()\"\n    >\n      {{ resendCodeText }}\n    </button>\n\n    <amplify-error *ngIf=\"authenticator.error\">\n      {{ authenticator.error }}\n    </amplify-error>\n  </fieldset>\n  <amplify-slot name=\"confirm-reset-password-footer\" [context]=\"context\">\n  </amplify-slot>\n</form>\n", dependencies: [{ kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i3.AmplifySlotComponent, selector: "amplify-slot", inputs: ["name", "context"] }, { kind: "component", type: i4.BaseFormFieldsComponent, selector: "amplify-base-form-fields", inputs: ["route"] }, { kind: "component", type: i5.ButtonComponent, selector: "button[amplify-button]", inputs: ["type", "fullWidth", "isDisabled", "size", "variation", "fontWeight"] }, { kind: "component", type: i6.ErrorComponent, selector: "amplify-error" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: ConfirmResetPasswordComponent, decorators: [{
            type: Component,
            args: [{ selector: 'amplify-confirm-reset-password', template: "<form data-amplify-form (submit)=\"onSubmit($event)\" (input)=\"onInput($event)\">\n  <fieldset\n    class=\"amplify-flex amplify-authenticator__column\"\n    data-amplify-fieldset\n    [disabled]=\"authenticator.isPending\"\n  >\n    <amplify-slot name=\"confirm-reset-password-header\" [context]=\"context\">\n      <h3 class=\"amplify-heading amplify-heading--3\">{{ headerText }}</h3>\n    </amplify-slot>\n\n    <amplify-base-form-fields\n      route=\"confirmResetPassword\"\n    ></amplify-base-form-fields>\n\n    <button\n      amplify-button\n      variation=\"primary\"\n      fullWidth=\"true\"\n      type=\"submit\"\n      [isDisabled]=\"authenticator.isPending\"\n    >\n      {{ submitText }}\n    </button>\n\n    <button\n      amplify-button\n      size=\"small\"\n      variation=\"link\"\n      fontWeight=\"normal\"\n      fullWidth=\"true\"\n      type=\"button\"\n      (click)=\"authenticator.resendCode()\"\n    >\n      {{ resendCodeText }}\n    </button>\n\n    <amplify-error *ngIf=\"authenticator.error\">\n      {{ authenticator.error }}\n    </amplify-error>\n  </fieldset>\n  <amplify-slot name=\"confirm-reset-password-footer\" [context]=\"context\">\n  </amplify-slot>\n</form>\n" }]
        }], ctorParameters: function () { return [{ type: i1.AuthenticatorService }]; }, propDecorators: { dataAttr: [{
                type: HostBinding,
                args: ['attr.data-amplify-authenticator-confirmsignin']
            }], headerText: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW1wbGlmeS1jb25maXJtLXJlc2V0LXBhc3N3b3JkLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpLWFuZ3VsYXIvc3JjL2xpYi9jb21wb25lbnRzL2F1dGhlbnRpY2F0b3IvY29tcG9uZW50cy9jb25maXJtLXJlc2V0LXBhc3N3b3JkL2FtcGxpZnktY29uZmlybS1yZXNldC1wYXNzd29yZC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy91aS1hbmd1bGFyL3NyYy9saWIvY29tcG9uZW50cy9hdXRoZW50aWNhdG9yL2NvbXBvbmVudHMvY29uZmlybS1yZXNldC1wYXNzd29yZC9hbXBsaWZ5LWNvbmZpcm0tcmVzZXQtcGFzc3dvcmQuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTlELE9BQU8sRUFFTCxvQkFBb0IsRUFDcEIscUJBQXFCLEdBQ3RCLE1BQU0saUJBQWlCLENBQUM7Ozs7Ozs7O0FBRXpCLE1BQU0sRUFDSixtQkFBbUIsRUFDbkIsaUJBQWlCLEVBQ2pCLGFBQWEsRUFDYix3QkFBd0IsR0FDekIsR0FBRyxxQkFBcUIsQ0FBQztBQU0xQixNQUFNLE9BQU8sNkJBQTZCO0lBV3hDLFlBQW1CLGFBQW1DO1FBQW5DLGtCQUFhLEdBQWIsYUFBYSxDQUFzQjtRQVZRLGFBQVEsR0FBRyxFQUFFLENBQUM7UUFDNUQsZUFBVSxHQUFHLHdCQUF3QixFQUFFLENBQUM7UUFJeEQscUJBQXFCO1FBQ2QscUJBQWdCLEdBQUcsbUJBQW1CLEVBQUUsQ0FBQztRQUN6QyxtQkFBYyxHQUFHLGlCQUFpQixFQUFFLENBQUM7UUFDckMsZUFBVSxHQUFHLGFBQWEsRUFBRSxDQUFDO0lBRXFCLENBQUM7SUFFMUQsSUFBVyxPQUFPO1FBQ2hCLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxXQUFXLENBQUM7SUFDeEMsQ0FBQztJQUVELE9BQU8sQ0FBQyxLQUFZO1FBQ2xCLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN2QixNQUFNLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxHQUFxQixLQUFLLENBQUMsTUFBTSxDQUFDO1FBQ3ZELElBQUksQ0FBQyxhQUFhLENBQUMsVUFBVSxDQUFDLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUM7SUFDakQsQ0FBQztJQUVELFFBQVEsQ0FBQyxLQUFZO1FBQ25CLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN2QixJQUFJLENBQUMsYUFBYSxDQUFDLFVBQVUsQ0FBQyxvQkFBb0IsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQzdELENBQUM7OzBIQTFCVSw2QkFBNkI7OEdBQTdCLDZCQUE2Qix3TUNuQjFDLGdzQ0EyQ0E7MkZEeEJhLDZCQUE2QjtrQkFKekMsU0FBUzsrQkFDRSxnQ0FBZ0M7MkdBSW9CLFFBQVE7c0JBQXJFLFdBQVc7dUJBQUMsK0NBQStDO2dCQUM1QyxVQUFVO3NCQUF6QixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBIb3N0QmluZGluZywgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEF1dGhlbnRpY2F0b3JTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vLi4vLi4vc2VydmljZXMvYXV0aGVudGljYXRvci5zZXJ2aWNlJztcbmltcG9ydCB7XG4gIEZvcm1GaWVsZHNBcnJheSxcbiAgZ2V0Rm9ybURhdGFGcm9tRXZlbnQsXG4gIGF1dGhlbnRpY2F0b3JUZXh0VXRpbCxcbn0gZnJvbSAnQGF3cy1hbXBsaWZ5L3VpJztcblxuY29uc3Qge1xuICBnZXRCYWNrVG9TaWduSW5UZXh0LFxuICBnZXRSZXNlbmRDb2RlVGV4dCxcbiAgZ2V0U3VibWl0VGV4dCxcbiAgZ2V0UmVzZXRZb3VyUGFzc3dvcmRUZXh0LFxufSA9IGF1dGhlbnRpY2F0b3JUZXh0VXRpbDtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW1wbGlmeS1jb25maXJtLXJlc2V0LXBhc3N3b3JkJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2FtcGxpZnktY29uZmlybS1yZXNldC1wYXNzd29yZC5jb21wb25lbnQuaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIENvbmZpcm1SZXNldFBhc3N3b3JkQ29tcG9uZW50IHtcbiAgQEhvc3RCaW5kaW5nKCdhdHRyLmRhdGEtYW1wbGlmeS1hdXRoZW50aWNhdG9yLWNvbmZpcm1zaWduaW4nKSBkYXRhQXR0ciA9ICcnO1xuICBASW5wdXQoKSBwdWJsaWMgaGVhZGVyVGV4dCA9IGdldFJlc2V0WW91clBhc3N3b3JkVGV4dCgpO1xuXG4gIHB1YmxpYyBzb3J0ZWRGb3JtRmllbGRzOiBGb3JtRmllbGRzQXJyYXk7XG5cbiAgLy8gdHJhbnNsYXRlZCBzdHJpbmdzXG4gIHB1YmxpYyBiYWNrVG9TaWduSW5UZXh0ID0gZ2V0QmFja1RvU2lnbkluVGV4dCgpO1xuICBwdWJsaWMgcmVzZW5kQ29kZVRleHQgPSBnZXRSZXNlbmRDb2RlVGV4dCgpO1xuICBwdWJsaWMgc3VibWl0VGV4dCA9IGdldFN1Ym1pdFRleHQoKTtcblxuICBjb25zdHJ1Y3RvcihwdWJsaWMgYXV0aGVudGljYXRvcjogQXV0aGVudGljYXRvclNlcnZpY2UpIHt9XG5cbiAgcHVibGljIGdldCBjb250ZXh0KCk6IEF1dGhlbnRpY2F0b3JTZXJ2aWNlWydzbG90Q29udGV4dCddIHtcbiAgICByZXR1cm4gdGhpcy5hdXRoZW50aWNhdG9yLnNsb3RDb250ZXh0O1xuICB9XG5cbiAgb25JbnB1dChldmVudDogRXZlbnQpOiB2b2lkIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGNvbnN0IHsgbmFtZSwgdmFsdWUgfSA9IDxIVE1MSW5wdXRFbGVtZW50PmV2ZW50LnRhcmdldDtcbiAgICB0aGlzLmF1dGhlbnRpY2F0b3IudXBkYXRlRm9ybSh7IG5hbWUsIHZhbHVlIH0pO1xuICB9XG5cbiAgb25TdWJtaXQoZXZlbnQ6IEV2ZW50KTogdm9pZCB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICB0aGlzLmF1dGhlbnRpY2F0b3Iuc3VibWl0Rm9ybShnZXRGb3JtRGF0YUZyb21FdmVudChldmVudCkpO1xuICB9XG59XG4iLCI8Zm9ybSBkYXRhLWFtcGxpZnktZm9ybSAoc3VibWl0KT1cIm9uU3VibWl0KCRldmVudClcIiAoaW5wdXQpPVwib25JbnB1dCgkZXZlbnQpXCI+XG4gIDxmaWVsZHNldFxuICAgIGNsYXNzPVwiYW1wbGlmeS1mbGV4IGFtcGxpZnktYXV0aGVudGljYXRvcl9fY29sdW1uXCJcbiAgICBkYXRhLWFtcGxpZnktZmllbGRzZXRcbiAgICBbZGlzYWJsZWRdPVwiYXV0aGVudGljYXRvci5pc1BlbmRpbmdcIlxuICA+XG4gICAgPGFtcGxpZnktc2xvdCBuYW1lPVwiY29uZmlybS1yZXNldC1wYXNzd29yZC1oZWFkZXJcIiBbY29udGV4dF09XCJjb250ZXh0XCI+XG4gICAgICA8aDMgY2xhc3M9XCJhbXBsaWZ5LWhlYWRpbmcgYW1wbGlmeS1oZWFkaW5nLS0zXCI+e3sgaGVhZGVyVGV4dCB9fTwvaDM+XG4gICAgPC9hbXBsaWZ5LXNsb3Q+XG5cbiAgICA8YW1wbGlmeS1iYXNlLWZvcm0tZmllbGRzXG4gICAgICByb3V0ZT1cImNvbmZpcm1SZXNldFBhc3N3b3JkXCJcbiAgICA+PC9hbXBsaWZ5LWJhc2UtZm9ybS1maWVsZHM+XG5cbiAgICA8YnV0dG9uXG4gICAgICBhbXBsaWZ5LWJ1dHRvblxuICAgICAgdmFyaWF0aW9uPVwicHJpbWFyeVwiXG4gICAgICBmdWxsV2lkdGg9XCJ0cnVlXCJcbiAgICAgIHR5cGU9XCJzdWJtaXRcIlxuICAgICAgW2lzRGlzYWJsZWRdPVwiYXV0aGVudGljYXRvci5pc1BlbmRpbmdcIlxuICAgID5cbiAgICAgIHt7IHN1Ym1pdFRleHQgfX1cbiAgICA8L2J1dHRvbj5cblxuICAgIDxidXR0b25cbiAgICAgIGFtcGxpZnktYnV0dG9uXG4gICAgICBzaXplPVwic21hbGxcIlxuICAgICAgdmFyaWF0aW9uPVwibGlua1wiXG4gICAgICBmb250V2VpZ2h0PVwibm9ybWFsXCJcbiAgICAgIGZ1bGxXaWR0aD1cInRydWVcIlxuICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAoY2xpY2spPVwiYXV0aGVudGljYXRvci5yZXNlbmRDb2RlKClcIlxuICAgID5cbiAgICAgIHt7IHJlc2VuZENvZGVUZXh0IH19XG4gICAgPC9idXR0b24+XG5cbiAgICA8YW1wbGlmeS1lcnJvciAqbmdJZj1cImF1dGhlbnRpY2F0b3IuZXJyb3JcIj5cbiAgICAgIHt7IGF1dGhlbnRpY2F0b3IuZXJyb3IgfX1cbiAgICA8L2FtcGxpZnktZXJyb3I+XG4gIDwvZmllbGRzZXQ+XG4gIDxhbXBsaWZ5LXNsb3QgbmFtZT1cImNvbmZpcm0tcmVzZXQtcGFzc3dvcmQtZm9vdGVyXCIgW2NvbnRleHRdPVwiY29udGV4dFwiPlxuICA8L2FtcGxpZnktc2xvdD5cbjwvZm9ybT5cbiJdfQ==