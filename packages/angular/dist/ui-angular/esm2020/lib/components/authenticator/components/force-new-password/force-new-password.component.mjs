import { Component, HostBinding, Input } from '@angular/core';
import { getFormDataFromEvent, authenticatorTextUtil } from '@aws-amplify/ui';
import * as i0 from "@angular/core";
import * as i1 from "../../../../services/authenticator.service";
import * as i2 from "@angular/common";
import * as i3 from "../../../../utilities/amplify-slot/amplify-slot.component";
import * as i4 from "../../../../primitives/button/button.component";
import * as i5 from "../../../../primitives/error/error.component";
import * as i6 from "./force-new-password-form-fields/force-new-password-form-fields.component";
const { getChangePasswordText, getBackToSignInText } = authenticatorTextUtil;
export class ForceNewPasswordComponent {
    constructor(authenticator) {
        this.authenticator = authenticator;
        this.dataAttr = '';
        this.headerText = getChangePasswordText();
        // translated texts
        this.changePasswordText = getChangePasswordText();
        this.backToSignInText = getBackToSignInText();
    }
    get context() {
        return this.authenticator.slotContext;
    }
    onInput(event) {
        event.preventDefault();
        const { name, value } = event.target;
        this.authenticator.updateForm({ name, value });
    }
    onSubmit(event) {
        event.preventDefault();
        this.authenticator.submitForm(getFormDataFromEvent(event));
    }
}
ForceNewPasswordComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: ForceNewPasswordComponent, deps: [{ token: i1.AuthenticatorService }], target: i0.ɵɵFactoryTarget.Component });
ForceNewPasswordComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.3.0", type: ForceNewPasswordComponent, selector: "amplify-force-new-password", inputs: { headerText: "headerText" }, host: { properties: { "attr.data-amplify-authenticator-forcenewpassword": "this.dataAttr" } }, ngImport: i0, template: "<form data-amplify-form (submit)=\"onSubmit($event)\" (input)=\"onInput($event)\">\n  <fieldset\n    class=\"amplify-flex amplify-authenticator__column\"\n    data-amplify-fieldset\n    [disabled]=\"authenticator.isPending\"\n  >\n    <amplify-slot name=\"force-new-password-header\" [context]=\"context\">\n      <h3 class=\"amplify-heading amplify-heading--3\">{{ this.headerText }}</h3>\n    </amplify-slot>\n\n    <amplify-slot name=\"force-new-form-fields\" [context]=\"context\">\n      <amplify-force-new-password-form-fields></amplify-force-new-password-form-fields>\n    </amplify-slot>\n\n    <button amplify-button variation=\"primary\" fullWidth=\"true\" type=\"submit\">\n      {{ changePasswordText }}\n    </button>\n\n    <button\n      amplify-button\n      size=\"small\"\n      variation=\"link\"\n      fontWeight=\"normal\"\n      fullWidth=\"true\"\n      (click)=\"authenticator.toSignIn()\"\n    >\n      {{ backToSignInText }}\n    </button>\n    <amplify-error *ngIf=\"authenticator.error\">\n      {{ authenticator.error }}\n    </amplify-error>\n  </fieldset>\n  <amplify-slot name=\"force-new-password-footer\" [context]=\"context\">\n  </amplify-slot>\n</form>\n", dependencies: [{ kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i3.AmplifySlotComponent, selector: "amplify-slot", inputs: ["name", "context"] }, { kind: "component", type: i4.ButtonComponent, selector: "button[amplify-button]", inputs: ["type", "fullWidth", "isDisabled", "size", "variation", "fontWeight"] }, { kind: "component", type: i5.ErrorComponent, selector: "amplify-error" }, { kind: "component", type: i6.ForceNewPasswordFormFieldsComponent, selector: "amplify-force-new-password-form-fields" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: ForceNewPasswordComponent, decorators: [{
            type: Component,
            args: [{ selector: 'amplify-force-new-password', template: "<form data-amplify-form (submit)=\"onSubmit($event)\" (input)=\"onInput($event)\">\n  <fieldset\n    class=\"amplify-flex amplify-authenticator__column\"\n    data-amplify-fieldset\n    [disabled]=\"authenticator.isPending\"\n  >\n    <amplify-slot name=\"force-new-password-header\" [context]=\"context\">\n      <h3 class=\"amplify-heading amplify-heading--3\">{{ this.headerText }}</h3>\n    </amplify-slot>\n\n    <amplify-slot name=\"force-new-form-fields\" [context]=\"context\">\n      <amplify-force-new-password-form-fields></amplify-force-new-password-form-fields>\n    </amplify-slot>\n\n    <button amplify-button variation=\"primary\" fullWidth=\"true\" type=\"submit\">\n      {{ changePasswordText }}\n    </button>\n\n    <button\n      amplify-button\n      size=\"small\"\n      variation=\"link\"\n      fontWeight=\"normal\"\n      fullWidth=\"true\"\n      (click)=\"authenticator.toSignIn()\"\n    >\n      {{ backToSignInText }}\n    </button>\n    <amplify-error *ngIf=\"authenticator.error\">\n      {{ authenticator.error }}\n    </amplify-error>\n  </fieldset>\n  <amplify-slot name=\"force-new-password-footer\" [context]=\"context\">\n  </amplify-slot>\n</form>\n" }]
        }], ctorParameters: function () { return [{ type: i1.AuthenticatorService }]; }, propDecorators: { dataAttr: [{
                type: HostBinding,
                args: ['attr.data-amplify-authenticator-forcenewpassword']
            }], headerText: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9yY2UtbmV3LXBhc3N3b3JkLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpLWFuZ3VsYXIvc3JjL2xpYi9jb21wb25lbnRzL2F1dGhlbnRpY2F0b3IvY29tcG9uZW50cy9mb3JjZS1uZXctcGFzc3dvcmQvZm9yY2UtbmV3LXBhc3N3b3JkLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpLWFuZ3VsYXIvc3JjL2xpYi9jb21wb25lbnRzL2F1dGhlbnRpY2F0b3IvY29tcG9uZW50cy9mb3JjZS1uZXctcGFzc3dvcmQvZm9yY2UtbmV3LXBhc3N3b3JkLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUU5RCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQzs7Ozs7Ozs7QUFFOUUsTUFBTSxFQUFFLHFCQUFxQixFQUFFLG1CQUFtQixFQUFFLEdBQUcscUJBQXFCLENBQUM7QUFNN0UsTUFBTSxPQUFPLHlCQUF5QjtJQVNwQyxZQUFtQixhQUFtQztRQUFuQyxrQkFBYSxHQUFiLGFBQWEsQ0FBc0I7UUFQdEQsYUFBUSxHQUFHLEVBQUUsQ0FBQztRQUNFLGVBQVUsR0FBRyxxQkFBcUIsRUFBRSxDQUFDO1FBRXJELG1CQUFtQjtRQUNaLHVCQUFrQixHQUFHLHFCQUFxQixFQUFFLENBQUM7UUFDN0MscUJBQWdCLEdBQUcsbUJBQW1CLEVBQUUsQ0FBQztJQUVTLENBQUM7SUFFMUQsSUFBVyxPQUFPO1FBQ2hCLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxXQUFXLENBQUM7SUFDeEMsQ0FBQztJQUVELE9BQU8sQ0FBQyxLQUFZO1FBQ2xCLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN2QixNQUFNLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxHQUFxQixLQUFLLENBQUMsTUFBTSxDQUFDO1FBQ3ZELElBQUksQ0FBQyxhQUFhLENBQUMsVUFBVSxDQUFDLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUM7SUFDakQsQ0FBQztJQUVELFFBQVEsQ0FBQyxLQUFZO1FBQ25CLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN2QixJQUFJLENBQUMsYUFBYSxDQUFDLFVBQVUsQ0FBQyxvQkFBb0IsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQzdELENBQUM7O3NIQXhCVSx5QkFBeUI7MEdBQXpCLHlCQUF5Qix1TUNWdEMsMHFDQW1DQTsyRkR6QmEseUJBQXlCO2tCQUpyQyxTQUFTOytCQUNFLDRCQUE0QjsyR0FLdEMsUUFBUTtzQkFEUCxXQUFXO3VCQUFDLGtEQUFrRDtnQkFFL0MsVUFBVTtzQkFBekIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSG9zdEJpbmRpbmcsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBdXRoZW50aWNhdG9yU2VydmljZSB9IGZyb20gJy4uLy4uLy4uLy4uL3NlcnZpY2VzL2F1dGhlbnRpY2F0b3Iuc2VydmljZSc7XG5pbXBvcnQgeyBnZXRGb3JtRGF0YUZyb21FdmVudCwgYXV0aGVudGljYXRvclRleHRVdGlsIH0gZnJvbSAnQGF3cy1hbXBsaWZ5L3VpJztcblxuY29uc3QgeyBnZXRDaGFuZ2VQYXNzd29yZFRleHQsIGdldEJhY2tUb1NpZ25JblRleHQgfSA9IGF1dGhlbnRpY2F0b3JUZXh0VXRpbDtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW1wbGlmeS1mb3JjZS1uZXctcGFzc3dvcmQnLFxuICB0ZW1wbGF0ZVVybDogJy4vZm9yY2UtbmV3LXBhc3N3b3JkLmNvbXBvbmVudC5odG1sJyxcbn0pXG5leHBvcnQgY2xhc3MgRm9yY2VOZXdQYXNzd29yZENvbXBvbmVudCB7XG4gIEBIb3N0QmluZGluZygnYXR0ci5kYXRhLWFtcGxpZnktYXV0aGVudGljYXRvci1mb3JjZW5ld3Bhc3N3b3JkJylcbiAgZGF0YUF0dHIgPSAnJztcbiAgQElucHV0KCkgcHVibGljIGhlYWRlclRleHQgPSBnZXRDaGFuZ2VQYXNzd29yZFRleHQoKTtcblxuICAvLyB0cmFuc2xhdGVkIHRleHRzXG4gIHB1YmxpYyBjaGFuZ2VQYXNzd29yZFRleHQgPSBnZXRDaGFuZ2VQYXNzd29yZFRleHQoKTtcbiAgcHVibGljIGJhY2tUb1NpZ25JblRleHQgPSBnZXRCYWNrVG9TaWduSW5UZXh0KCk7XG5cbiAgY29uc3RydWN0b3IocHVibGljIGF1dGhlbnRpY2F0b3I6IEF1dGhlbnRpY2F0b3JTZXJ2aWNlKSB7fVxuXG4gIHB1YmxpYyBnZXQgY29udGV4dCgpOiBBdXRoZW50aWNhdG9yU2VydmljZVsnc2xvdENvbnRleHQnXSB7XG4gICAgcmV0dXJuIHRoaXMuYXV0aGVudGljYXRvci5zbG90Q29udGV4dDtcbiAgfVxuXG4gIG9uSW5wdXQoZXZlbnQ6IEV2ZW50KTogdm9pZCB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICBjb25zdCB7IG5hbWUsIHZhbHVlIH0gPSA8SFRNTElucHV0RWxlbWVudD5ldmVudC50YXJnZXQ7XG4gICAgdGhpcy5hdXRoZW50aWNhdG9yLnVwZGF0ZUZvcm0oeyBuYW1lLCB2YWx1ZSB9KTtcbiAgfVxuXG4gIG9uU3VibWl0KGV2ZW50OiBFdmVudCk6IHZvaWQge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgdGhpcy5hdXRoZW50aWNhdG9yLnN1Ym1pdEZvcm0oZ2V0Rm9ybURhdGFGcm9tRXZlbnQoZXZlbnQpKTtcbiAgfVxufVxuIiwiPGZvcm0gZGF0YS1hbXBsaWZ5LWZvcm0gKHN1Ym1pdCk9XCJvblN1Ym1pdCgkZXZlbnQpXCIgKGlucHV0KT1cIm9uSW5wdXQoJGV2ZW50KVwiPlxuICA8ZmllbGRzZXRcbiAgICBjbGFzcz1cImFtcGxpZnktZmxleCBhbXBsaWZ5LWF1dGhlbnRpY2F0b3JfX2NvbHVtblwiXG4gICAgZGF0YS1hbXBsaWZ5LWZpZWxkc2V0XG4gICAgW2Rpc2FibGVkXT1cImF1dGhlbnRpY2F0b3IuaXNQZW5kaW5nXCJcbiAgPlxuICAgIDxhbXBsaWZ5LXNsb3QgbmFtZT1cImZvcmNlLW5ldy1wYXNzd29yZC1oZWFkZXJcIiBbY29udGV4dF09XCJjb250ZXh0XCI+XG4gICAgICA8aDMgY2xhc3M9XCJhbXBsaWZ5LWhlYWRpbmcgYW1wbGlmeS1oZWFkaW5nLS0zXCI+e3sgdGhpcy5oZWFkZXJUZXh0IH19PC9oMz5cbiAgICA8L2FtcGxpZnktc2xvdD5cblxuICAgIDxhbXBsaWZ5LXNsb3QgbmFtZT1cImZvcmNlLW5ldy1mb3JtLWZpZWxkc1wiIFtjb250ZXh0XT1cImNvbnRleHRcIj5cbiAgICAgIDxhbXBsaWZ5LWZvcmNlLW5ldy1wYXNzd29yZC1mb3JtLWZpZWxkcz48L2FtcGxpZnktZm9yY2UtbmV3LXBhc3N3b3JkLWZvcm0tZmllbGRzPlxuICAgIDwvYW1wbGlmeS1zbG90PlxuXG4gICAgPGJ1dHRvbiBhbXBsaWZ5LWJ1dHRvbiB2YXJpYXRpb249XCJwcmltYXJ5XCIgZnVsbFdpZHRoPVwidHJ1ZVwiIHR5cGU9XCJzdWJtaXRcIj5cbiAgICAgIHt7IGNoYW5nZVBhc3N3b3JkVGV4dCB9fVxuICAgIDwvYnV0dG9uPlxuXG4gICAgPGJ1dHRvblxuICAgICAgYW1wbGlmeS1idXR0b25cbiAgICAgIHNpemU9XCJzbWFsbFwiXG4gICAgICB2YXJpYXRpb249XCJsaW5rXCJcbiAgICAgIGZvbnRXZWlnaHQ9XCJub3JtYWxcIlxuICAgICAgZnVsbFdpZHRoPVwidHJ1ZVwiXG4gICAgICAoY2xpY2spPVwiYXV0aGVudGljYXRvci50b1NpZ25JbigpXCJcbiAgICA+XG4gICAgICB7eyBiYWNrVG9TaWduSW5UZXh0IH19XG4gICAgPC9idXR0b24+XG4gICAgPGFtcGxpZnktZXJyb3IgKm5nSWY9XCJhdXRoZW50aWNhdG9yLmVycm9yXCI+XG4gICAgICB7eyBhdXRoZW50aWNhdG9yLmVycm9yIH19XG4gICAgPC9hbXBsaWZ5LWVycm9yPlxuICA8L2ZpZWxkc2V0PlxuICA8YW1wbGlmeS1zbG90IG5hbWU9XCJmb3JjZS1uZXctcGFzc3dvcmQtZm9vdGVyXCIgW2NvbnRleHRdPVwiY29udGV4dFwiPlxuICA8L2FtcGxpZnktc2xvdD5cbjwvZm9ybT5cbiJdfQ==