import { Component, HostBinding, Input, ViewEncapsulation, } from '@angular/core';
import { getActorState, getFormDataFromEvent, translate, authenticatorTextUtil, censorContactMethod, } from '@aws-amplify/ui';
import { getAttributeMap } from '../../../../common';
import { nanoid } from 'nanoid';
import * as i0 from "@angular/core";
import * as i1 from "../../../../services/authenticator.service";
import * as i2 from "@angular/common";
import * as i3 from "../../../../utilities/amplify-slot/amplify-slot.component";
import * as i4 from "../../../../primitives/button/button.component";
import * as i5 from "../../../../primitives/error/error.component";
const { getSkipText, getVerifyText, getAccountRecoveryInfoText } = authenticatorTextUtil;
export class VerifyUserComponent {
    constructor(authenticator) {
        this.authenticator = authenticator;
        this.dataAttr = '';
        this.headerText = getAccountRecoveryInfoText();
        this.unverifiedUserAttributes = {};
        this.labelId = nanoid(12);
        // translated texts
        this.skipText = getSkipText();
        this.verifyText = getVerifyText();
    }
    get context() {
        return this.authenticator.slotContext;
    }
    ngOnInit() {
        const actorState = getActorState(this.authenticator.authState);
        this.unverifiedUserAttributes = actorState.context.unverifiedUserAttributes;
    }
    getLabel(attr, value) {
        const attributeMap = getAttributeMap();
        const { label } = attributeMap[attr];
        const translatedTypeLabel = translate(label);
        const censoredAttributeValue = censorContactMethod(label, value);
        return `${translatedTypeLabel}: ${censoredAttributeValue}`;
    }
    onInput(event) {
        event.preventDefault();
        const { name, value } = event.target;
        this.authenticator.updateForm({ name, value });
    }
    onSubmit(event) {
        event.preventDefault();
        this.authenticator.submitForm(getFormDataFromEvent(event));
    }
}
VerifyUserComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: VerifyUserComponent, deps: [{ token: i1.AuthenticatorService }], target: i0.ɵɵFactoryTarget.Component });
VerifyUserComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.3.0", type: VerifyUserComponent, selector: "amplify-verify-user", inputs: { headerText: "headerText" }, host: { properties: { "attr.data-amplify-authenticator-verifyuser": "this.dataAttr" } }, ngImport: i0, template: "<form data-amplify-form (input)=\"onInput($event)\" (submit)=\"onSubmit($event)\">\n  <fieldset\n    class=\"amplify-flex amplify-authenticator__column\"\n    data-amplify-fieldset\n    [disabled]=\"authenticator.isPending\"\n  >\n    <amplify-slot name=\"verify-user-header\" [context]=\"context\">\n      <h3 class=\"amplify-heading amplify-heading--3\">{{ this.headerText }}</h3>\n    </amplify-slot>\n\n    <div\n      *ngFor=\"\n        let unverifiedUserAttribute of unverifiedUserAttributes | keyvalue\n        let i = index;\n      \"\n    >\n      <input\n        name=\"unverifiedAttr\"\n        type=\"radio\"\n        [value]=\"unverifiedUserAttribute.key\"\n        [id]=\"labelId\"\n        [checked]=\"i === 0\"\n      />\n      <label [for]=\"labelId\">{{\n        getLabel(unverifiedUserAttribute.key, unverifiedUserAttribute.value)\n      }}</label>\n    </div>\n\n    <button\n      amplify-button\n      variation=\"primary\"\n      fullWidth=\"true\"\n      type=\"submit\"\n      [isDisabled]=\"authenticator.isPending\"\n    >\n      {{ verifyText }}\n    </button>\n\n    <button\n      amplify-button\n      size=\"small\"\n      variation=\"link\"\n      fontWeight=\"normal\"\n      fullWidth=\"true\"\n      (click)=\"authenticator.skipVerification()\"\n    >\n      {{ skipText }}\n    </button>\n\n    <amplify-error *ngIf=\"authenticator.error\">\n      {{ authenticator.error }}\n    </amplify-error>\n  </fieldset>\n  <amplify-slot name=\"verify-user-footer\" [context]=\"context\"> </amplify-slot>\n</form>\n", dependencies: [{ kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i3.AmplifySlotComponent, selector: "amplify-slot", inputs: ["name", "context"] }, { kind: "component", type: i4.ButtonComponent, selector: "button[amplify-button]", inputs: ["type", "fullWidth", "isDisabled", "size", "variation", "fontWeight"] }, { kind: "component", type: i5.ErrorComponent, selector: "amplify-error" }, { kind: "pipe", type: i2.KeyValuePipe, name: "keyvalue" }], encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: VerifyUserComponent, decorators: [{
            type: Component,
            args: [{ selector: 'amplify-verify-user', encapsulation: ViewEncapsulation.None, template: "<form data-amplify-form (input)=\"onInput($event)\" (submit)=\"onSubmit($event)\">\n  <fieldset\n    class=\"amplify-flex amplify-authenticator__column\"\n    data-amplify-fieldset\n    [disabled]=\"authenticator.isPending\"\n  >\n    <amplify-slot name=\"verify-user-header\" [context]=\"context\">\n      <h3 class=\"amplify-heading amplify-heading--3\">{{ this.headerText }}</h3>\n    </amplify-slot>\n\n    <div\n      *ngFor=\"\n        let unverifiedUserAttribute of unverifiedUserAttributes | keyvalue\n        let i = index;\n      \"\n    >\n      <input\n        name=\"unverifiedAttr\"\n        type=\"radio\"\n        [value]=\"unverifiedUserAttribute.key\"\n        [id]=\"labelId\"\n        [checked]=\"i === 0\"\n      />\n      <label [for]=\"labelId\">{{\n        getLabel(unverifiedUserAttribute.key, unverifiedUserAttribute.value)\n      }}</label>\n    </div>\n\n    <button\n      amplify-button\n      variation=\"primary\"\n      fullWidth=\"true\"\n      type=\"submit\"\n      [isDisabled]=\"authenticator.isPending\"\n    >\n      {{ verifyText }}\n    </button>\n\n    <button\n      amplify-button\n      size=\"small\"\n      variation=\"link\"\n      fontWeight=\"normal\"\n      fullWidth=\"true\"\n      (click)=\"authenticator.skipVerification()\"\n    >\n      {{ skipText }}\n    </button>\n\n    <amplify-error *ngIf=\"authenticator.error\">\n      {{ authenticator.error }}\n    </amplify-error>\n  </fieldset>\n  <amplify-slot name=\"verify-user-footer\" [context]=\"context\"> </amplify-slot>\n</form>\n" }]
        }], ctorParameters: function () { return [{ type: i1.AuthenticatorService }]; }, propDecorators: { dataAttr: [{
                type: HostBinding,
                args: ['attr.data-amplify-authenticator-verifyuser']
            }], headerText: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmVyaWZ5LXVzZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdWktYW5ndWxhci9zcmMvbGliL2NvbXBvbmVudHMvYXV0aGVudGljYXRvci9jb21wb25lbnRzL3ZlcmlmeS11c2VyL3ZlcmlmeS11c2VyLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpLWFuZ3VsYXIvc3JjL2xpYi9jb21wb25lbnRzL2F1dGhlbnRpY2F0b3IvY29tcG9uZW50cy92ZXJpZnktdXNlci92ZXJpZnktdXNlci5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUNULFdBQVcsRUFDWCxLQUFLLEVBRUwsaUJBQWlCLEdBQ2xCLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFDTCxhQUFhLEVBQ2Isb0JBQW9CLEVBRXBCLFNBQVMsRUFDVCxxQkFBcUIsRUFFckIsbUJBQW1CLEdBRXBCLE1BQU0saUJBQWlCLENBQUM7QUFFekIsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxRQUFRLENBQUM7Ozs7Ozs7QUFFaEMsTUFBTSxFQUFFLFdBQVcsRUFBRSxhQUFhLEVBQUUsMEJBQTBCLEVBQUUsR0FDOUQscUJBQXFCLENBQUM7QUFNeEIsTUFBTSxPQUFPLG1CQUFtQjtJQVc5QixZQUFtQixhQUFtQztRQUFuQyxrQkFBYSxHQUFiLGFBQWEsQ0FBc0I7UUFWSyxhQUFRLEdBQUcsRUFBRSxDQUFDO1FBQ3pELGVBQVUsR0FBRywwQkFBMEIsRUFBRSxDQUFDO1FBRW5ELDZCQUF3QixHQUFHLEVBQUUsQ0FBQztRQUM5QixZQUFPLEdBQUcsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBRTVCLG1CQUFtQjtRQUNaLGFBQVEsR0FBRyxXQUFXLEVBQUUsQ0FBQztRQUN6QixlQUFVLEdBQUcsYUFBYSxFQUFFLENBQUM7SUFFcUIsQ0FBQztJQUUxRCxJQUFXLE9BQU87UUFDaEIsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDLFdBQVcsQ0FBQztJQUN4QyxDQUFDO0lBRUQsUUFBUTtRQUNOLE1BQU0sVUFBVSxHQUFHLGFBQWEsQ0FDOUIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQ2QsQ0FBQztRQUNqQixJQUFJLENBQUMsd0JBQXdCLEdBQUcsVUFBVSxDQUFDLE9BQU8sQ0FBQyx3QkFBd0IsQ0FBQztJQUM5RSxDQUFDO0lBRUQsUUFBUSxDQUFDLElBQW9DLEVBQUUsS0FBYTtRQUMxRCxNQUFNLFlBQVksR0FBRyxlQUFlLEVBQUUsQ0FBQztRQUN2QyxNQUFNLEVBQUUsS0FBSyxFQUFFLEdBQUcsWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3JDLE1BQU0sbUJBQW1CLEdBQUcsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzdDLE1BQU0sc0JBQXNCLEdBQUcsbUJBQW1CLENBQ2hELEtBQXNCLEVBQ3RCLEtBQUssQ0FDTixDQUFDO1FBQ0YsT0FBTyxHQUFHLG1CQUFtQixLQUFLLHNCQUFzQixFQUFFLENBQUM7SUFDN0QsQ0FBQztJQUVELE9BQU8sQ0FBQyxLQUFZO1FBQ2xCLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN2QixNQUFNLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxHQUFxQixLQUFLLENBQUMsTUFBTSxDQUFDO1FBQ3ZELElBQUksQ0FBQyxhQUFhLENBQUMsVUFBVSxDQUFDLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUM7SUFDakQsQ0FBQztJQUVELFFBQVEsQ0FBQyxLQUFZO1FBQ25CLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN2QixJQUFJLENBQUMsYUFBYSxDQUFDLFVBQVUsQ0FBQyxvQkFBb0IsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQzdELENBQUM7O2dIQTVDVSxtQkFBbUI7b0dBQW5CLG1CQUFtQiwwTEM1QmhDLHdnREF1REE7MkZEM0JhLG1CQUFtQjtrQkFML0IsU0FBUzsrQkFDRSxxQkFBcUIsaUJBRWhCLGlCQUFpQixDQUFDLElBQUk7MkdBR3NCLFFBQVE7c0JBQWxFLFdBQVc7dUJBQUMsNENBQTRDO2dCQUN6QyxVQUFVO3NCQUF6QixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ29tcG9uZW50LFxuICBIb3N0QmluZGluZyxcbiAgSW5wdXQsXG4gIE9uSW5pdCxcbiAgVmlld0VuY2Fwc3VsYXRpb24sXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtcbiAgZ2V0QWN0b3JTdGF0ZSxcbiAgZ2V0Rm9ybURhdGFGcm9tRXZlbnQsXG4gIFNpZ25JblN0YXRlLFxuICB0cmFuc2xhdGUsXG4gIGF1dGhlbnRpY2F0b3JUZXh0VXRpbCxcbiAgVW52ZXJpZmllZFVzZXJBdHRyaWJ1dGVzLFxuICBjZW5zb3JDb250YWN0TWV0aG9kLFxuICBDb250YWN0TWV0aG9kLFxufSBmcm9tICdAYXdzLWFtcGxpZnkvdWknO1xuaW1wb3J0IHsgQXV0aGVudGljYXRvclNlcnZpY2UgfSBmcm9tICcuLi8uLi8uLi8uLi9zZXJ2aWNlcy9hdXRoZW50aWNhdG9yLnNlcnZpY2UnO1xuaW1wb3J0IHsgZ2V0QXR0cmlidXRlTWFwIH0gZnJvbSAnLi4vLi4vLi4vLi4vY29tbW9uJztcbmltcG9ydCB7IG5hbm9pZCB9IGZyb20gJ25hbm9pZCc7XG5cbmNvbnN0IHsgZ2V0U2tpcFRleHQsIGdldFZlcmlmeVRleHQsIGdldEFjY291bnRSZWNvdmVyeUluZm9UZXh0IH0gPVxuICBhdXRoZW50aWNhdG9yVGV4dFV0aWw7XG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhbXBsaWZ5LXZlcmlmeS11c2VyJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3ZlcmlmeS11c2VyLmNvbXBvbmVudC5odG1sJyxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbn0pXG5leHBvcnQgY2xhc3MgVmVyaWZ5VXNlckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBIb3N0QmluZGluZygnYXR0ci5kYXRhLWFtcGxpZnktYXV0aGVudGljYXRvci12ZXJpZnl1c2VyJykgZGF0YUF0dHIgPSAnJztcbiAgQElucHV0KCkgcHVibGljIGhlYWRlclRleHQgPSBnZXRBY2NvdW50UmVjb3ZlcnlJbmZvVGV4dCgpO1xuXG4gIHB1YmxpYyB1bnZlcmlmaWVkVXNlckF0dHJpYnV0ZXMgPSB7fTtcbiAgcHVibGljIGxhYmVsSWQgPSBuYW5vaWQoMTIpO1xuXG4gIC8vIHRyYW5zbGF0ZWQgdGV4dHNcbiAgcHVibGljIHNraXBUZXh0ID0gZ2V0U2tpcFRleHQoKTtcbiAgcHVibGljIHZlcmlmeVRleHQgPSBnZXRWZXJpZnlUZXh0KCk7XG5cbiAgY29uc3RydWN0b3IocHVibGljIGF1dGhlbnRpY2F0b3I6IEF1dGhlbnRpY2F0b3JTZXJ2aWNlKSB7fVxuXG4gIHB1YmxpYyBnZXQgY29udGV4dCgpOiBBdXRoZW50aWNhdG9yU2VydmljZVsnc2xvdENvbnRleHQnXSB7XG4gICAgcmV0dXJuIHRoaXMuYXV0aGVudGljYXRvci5zbG90Q29udGV4dDtcbiAgfVxuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIGNvbnN0IGFjdG9yU3RhdGUgPSBnZXRBY3RvclN0YXRlKFxuICAgICAgdGhpcy5hdXRoZW50aWNhdG9yLmF1dGhTdGF0ZVxuICAgICkgYXMgU2lnbkluU3RhdGU7XG4gICAgdGhpcy51bnZlcmlmaWVkVXNlckF0dHJpYnV0ZXMgPSBhY3RvclN0YXRlLmNvbnRleHQudW52ZXJpZmllZFVzZXJBdHRyaWJ1dGVzO1xuICB9XG5cbiAgZ2V0TGFiZWwoYXR0cjoga2V5b2YgVW52ZXJpZmllZFVzZXJBdHRyaWJ1dGVzLCB2YWx1ZTogc3RyaW5nKTogc3RyaW5nIHtcbiAgICBjb25zdCBhdHRyaWJ1dGVNYXAgPSBnZXRBdHRyaWJ1dGVNYXAoKTtcbiAgICBjb25zdCB7IGxhYmVsIH0gPSBhdHRyaWJ1dGVNYXBbYXR0cl07XG4gICAgY29uc3QgdHJhbnNsYXRlZFR5cGVMYWJlbCA9IHRyYW5zbGF0ZShsYWJlbCk7XG4gICAgY29uc3QgY2Vuc29yZWRBdHRyaWJ1dGVWYWx1ZSA9IGNlbnNvckNvbnRhY3RNZXRob2QoXG4gICAgICBsYWJlbCBhcyBDb250YWN0TWV0aG9kLFxuICAgICAgdmFsdWVcbiAgICApO1xuICAgIHJldHVybiBgJHt0cmFuc2xhdGVkVHlwZUxhYmVsfTogJHtjZW5zb3JlZEF0dHJpYnV0ZVZhbHVlfWA7XG4gIH1cblxuICBvbklucHV0KGV2ZW50OiBFdmVudCk6IHZvaWQge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgY29uc3QgeyBuYW1lLCB2YWx1ZSB9ID0gPEhUTUxJbnB1dEVsZW1lbnQ+ZXZlbnQudGFyZ2V0O1xuICAgIHRoaXMuYXV0aGVudGljYXRvci51cGRhdGVGb3JtKHsgbmFtZSwgdmFsdWUgfSk7XG4gIH1cblxuICBvblN1Ym1pdChldmVudDogRXZlbnQpOiB2b2lkIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHRoaXMuYXV0aGVudGljYXRvci5zdWJtaXRGb3JtKGdldEZvcm1EYXRhRnJvbUV2ZW50KGV2ZW50KSk7XG4gIH1cbn1cbiIsIjxmb3JtIGRhdGEtYW1wbGlmeS1mb3JtIChpbnB1dCk9XCJvbklucHV0KCRldmVudClcIiAoc3VibWl0KT1cIm9uU3VibWl0KCRldmVudClcIj5cbiAgPGZpZWxkc2V0XG4gICAgY2xhc3M9XCJhbXBsaWZ5LWZsZXggYW1wbGlmeS1hdXRoZW50aWNhdG9yX19jb2x1bW5cIlxuICAgIGRhdGEtYW1wbGlmeS1maWVsZHNldFxuICAgIFtkaXNhYmxlZF09XCJhdXRoZW50aWNhdG9yLmlzUGVuZGluZ1wiXG4gID5cbiAgICA8YW1wbGlmeS1zbG90IG5hbWU9XCJ2ZXJpZnktdXNlci1oZWFkZXJcIiBbY29udGV4dF09XCJjb250ZXh0XCI+XG4gICAgICA8aDMgY2xhc3M9XCJhbXBsaWZ5LWhlYWRpbmcgYW1wbGlmeS1oZWFkaW5nLS0zXCI+e3sgdGhpcy5oZWFkZXJUZXh0IH19PC9oMz5cbiAgICA8L2FtcGxpZnktc2xvdD5cblxuICAgIDxkaXZcbiAgICAgICpuZ0Zvcj1cIlxuICAgICAgICBsZXQgdW52ZXJpZmllZFVzZXJBdHRyaWJ1dGUgb2YgdW52ZXJpZmllZFVzZXJBdHRyaWJ1dGVzIHwga2V5dmFsdWVcbiAgICAgICAgbGV0IGkgPSBpbmRleDtcbiAgICAgIFwiXG4gICAgPlxuICAgICAgPGlucHV0XG4gICAgICAgIG5hbWU9XCJ1bnZlcmlmaWVkQXR0clwiXG4gICAgICAgIHR5cGU9XCJyYWRpb1wiXG4gICAgICAgIFt2YWx1ZV09XCJ1bnZlcmlmaWVkVXNlckF0dHJpYnV0ZS5rZXlcIlxuICAgICAgICBbaWRdPVwibGFiZWxJZFwiXG4gICAgICAgIFtjaGVja2VkXT1cImkgPT09IDBcIlxuICAgICAgLz5cbiAgICAgIDxsYWJlbCBbZm9yXT1cImxhYmVsSWRcIj57e1xuICAgICAgICBnZXRMYWJlbCh1bnZlcmlmaWVkVXNlckF0dHJpYnV0ZS5rZXksIHVudmVyaWZpZWRVc2VyQXR0cmlidXRlLnZhbHVlKVxuICAgICAgfX08L2xhYmVsPlxuICAgIDwvZGl2PlxuXG4gICAgPGJ1dHRvblxuICAgICAgYW1wbGlmeS1idXR0b25cbiAgICAgIHZhcmlhdGlvbj1cInByaW1hcnlcIlxuICAgICAgZnVsbFdpZHRoPVwidHJ1ZVwiXG4gICAgICB0eXBlPVwic3VibWl0XCJcbiAgICAgIFtpc0Rpc2FibGVkXT1cImF1dGhlbnRpY2F0b3IuaXNQZW5kaW5nXCJcbiAgICA+XG4gICAgICB7eyB2ZXJpZnlUZXh0IH19XG4gICAgPC9idXR0b24+XG5cbiAgICA8YnV0dG9uXG4gICAgICBhbXBsaWZ5LWJ1dHRvblxuICAgICAgc2l6ZT1cInNtYWxsXCJcbiAgICAgIHZhcmlhdGlvbj1cImxpbmtcIlxuICAgICAgZm9udFdlaWdodD1cIm5vcm1hbFwiXG4gICAgICBmdWxsV2lkdGg9XCJ0cnVlXCJcbiAgICAgIChjbGljayk9XCJhdXRoZW50aWNhdG9yLnNraXBWZXJpZmljYXRpb24oKVwiXG4gICAgPlxuICAgICAge3sgc2tpcFRleHQgfX1cbiAgICA8L2J1dHRvbj5cblxuICAgIDxhbXBsaWZ5LWVycm9yICpuZ0lmPVwiYXV0aGVudGljYXRvci5lcnJvclwiPlxuICAgICAge3sgYXV0aGVudGljYXRvci5lcnJvciB9fVxuICAgIDwvYW1wbGlmeS1lcnJvcj5cbiAgPC9maWVsZHNldD5cbiAgPGFtcGxpZnktc2xvdCBuYW1lPVwidmVyaWZ5LXVzZXItZm9vdGVyXCIgW2NvbnRleHRdPVwiY29udGV4dFwiPiA8L2FtcGxpZnktc2xvdD5cbjwvZm9ybT5cbiJdfQ==